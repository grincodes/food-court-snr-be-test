FROM node:18-alpine As development

WORKDIR /usr/src

COPY . .

RUN npm install -g pnpm

RUN pnpm install -r 

RUN pnpm run build 

FROM node:alpine as production

ARG NODE_ENV
ARG PORT
ARG DATABASE_USER
ARG DATABASE_PASSWORD
ARG DATABASE_HOST
ARG DATABASE_NAME
ARG DATABASE_PORT
ARG DATABASE_SYNC
ARG SLACK_TOKEN
ARG AZURE_STORAGE_CONNECTION_STRING
ARG AZURE_STORAGE_ACCESS_KEY
ARG AZURE_STORAGE_CONTAINER_NAME
ARG AZURE_STORAGE_ACCOUNT_NAME
ARG AZURE_STORAGE_BLOB_NAME
ARG AUTH_GRPC_URL



ENV NODE_ENV $NODE_ENV
ENV PORT $PORT
ENV DATABASE_USER $DATABASE_USER
ENV DATABASE_PASSWORD $DATABASE_PASSWORD
ENV DATABASE_HOST $DATABASE_HOST
ENV DATABASE_NAME $DATABASE_NAME
ENV DATABASE_PORT $DATABASE_PORT
ENV DATABASE_SYNC $DATABASE_SYNC
ENV SLACK_TOKEN $SLACK_TOKEN
ENV AZURE_STORAGE_CONNECTION_STRING $AZURE_STORAGE_CONNECTION_STRING
ENV AZURE_STORAGE_ACCESS_KEY $AZURE_STORAGE_ACCESS_KEY
ENV AZURE_STORAGE_CONTAINER_NAME $AZURE_STORAGE_CONTAINER_NAME
ENV AZURE_STORAGE_ACCOUNT_NAME $AZURE_STORAGE_ACCOUNT_NAME
ENV AZURE_STORAGE_BLOB_NAME $AZURE_STORAGE_BLOB_NAME
ENV AUTH_GRPC_URL $AUTH_GRPC_URL





WORKDIR /usr/src

COPY package.json ./
COPY pnpm-lock.yaml ./

RUN npm install -g pnpm

RUN pnpm install --prod

COPY --from=development /usr/src/dist ./dist
EXPOSE 80
CMD ["node", "dist/main"]